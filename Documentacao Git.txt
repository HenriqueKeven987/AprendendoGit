
//estados dos arquivos no git
nao monitorado == nao esta no repositorio local mas esta na mesma pasta do repositorio .git
modificado == foi adicionado ao .git local mais foi alterado
preparado == arquivos que estao prontos para serem commitados
consolidado == foi commitado e esta pronto para ser enviado ao repositorio remoto

//permite ver o estado do arquivo tal no commit tal isso E o git blz controle de versoes
git chekout <commit> <file>

//vai te fazer voltar para o ultimo commit
git chekout <branch atual>

//quando seu coleginha resolver fazer alteracoes para te sacanear tai o comando
git chekout -- <file> ou ponto como no git add para desfazer tudo

//esse E brabo vai desfazer tudo que vc fez em um commit tipo add em uma linha ele vai del na linha adicionada
git revert <commit>

//outro brabo tb vai apagar e desfazer o commit CUIDADO NAO USAR QUANDO O COMMIT JA ESTIVER NO REMOTO
git reset <commit>

//voltando no tempo basicamente em 1 commit 
git reset HEAD~1 

//vai mostrar a oq foi alterado nos ultimos commits HEAD~1 vai mostrar o ultimo ja HEAD~2 o penultimo
//e o diff mostra o historico de alteracoes
git diff HEAD~1

//o comando q mostra o status de todos os arquivos no diretorio git local
git status

//primeira coisa a se fazer quando em outra maquina e ciente q o arquivo foi alterado
git pull 

//baixar direto do repositorio remoto
git clone <url>

//desfazer alteracoes q foram feitas no arquivo
git checkout --nomeDoArquivo

//troca de branch
git checkout <nome da branch>

//alterar o editor de codigo padrao
git config --global core.editor nomeDoEditor

//mostrar os commitis e arquivos alterados que nao para nenhum repositorio
git log

//mostra os diretorios remotos que estao conectados ao seu git
git remote -v

//se nao tiver repositorio local
git init

//se nao tiver repositorio remoto
git remote add origin "link do github"

//se nao conseguir enviar os commits E pq voce precissa sincronizar com o comando
git fetch

//para adionar ao .git repositorio local
git add .

//para dizer qual foi a alteracao feita
git commit -m "alteracao" 

//envio para o repositorio remoto github no caso
git push

//ver as branch(linhas do tempo da aplica√ßao)
git branch

//excluir branch 
git branch -d <nome da branch>

//criar uma nova branch
git branch <nome da branch>

//
